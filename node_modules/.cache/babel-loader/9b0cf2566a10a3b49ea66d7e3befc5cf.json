{"ast":null,"code":"import{baseURL}from\"./settings\";function handleHttpErrors(res){if(!res.ok){return Promise.reject({status:res.status,fullError:res.json()});}return res.json();}function apiFacade(){var setToken=function setToken(token){localStorage.setItem('jwtToken',token);};var getToken=function getToken(){return localStorage.getItem('jwtToken');};var loggedIn=function loggedIn(){var loggedIn=getToken()!=null;return loggedIn;};var logout=function logout(){localStorage.removeItem(\"jwtToken\");};var login=function login(user,password){var options=makeOptions(\"POST\",true,{username:user,password:password});return fetch(baseURL+\"/api/login\",options).then(handleHttpErrors).then(function(res){setToken(res.token);});};var fetchData=function fetchData(){var options=makeOptions(\"GET\",true);//True add's the token\nreturn fetch(baseURL+\"/api/info/user\",options).then(handleHttpErrors);};var makeOptions=function makeOptions(method,addToken,body){var opts={method:method,headers:{\"Content-type\":\"application/json\",'Accept':'application/json','Origin':'*'}};if(addToken&&loggedIn()){opts.headers[\"x-access-token\"]=getToken();}if(body){opts.body=JSON.stringify(body);}return opts;};return{makeOptions:makeOptions,setToken:setToken,getToken:getToken,loggedIn:loggedIn,login:login,logout:logout,fetchData:fetchData};}var facade=apiFacade();export default facade;","map":{"version":3,"sources":["/Users/cecilie/NetBeansProjects/Eksamensprojekt_3semester/Eksamensprojekt_3semester_frontend/src/loginFacade.js"],"names":["baseURL","handleHttpErrors","res","ok","Promise","reject","status","fullError","json","apiFacade","setToken","token","localStorage","setItem","getToken","getItem","loggedIn","logout","removeItem","login","user","password","options","makeOptions","username","fetch","then","fetchData","method","addToken","body","opts","headers","JSON","stringify","facade"],"mappings":"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","sourcesContent":["import {baseURL} from \"./settings\"\n\nfunction handleHttpErrors(res) {\n    if (!res.ok) {\n        return Promise.reject({ status: res.status, fullError: res.json() })\n    }\n    return res.json();\n}\n\nfunction apiFacade() {\n    const setToken = (token) => {\n        localStorage.setItem('jwtToken', token)\n    }\n    const getToken = () => {\n        return localStorage.getItem('jwtToken')\n    }\n    const loggedIn = () => {\n        const loggedIn = getToken() != null;\n        return loggedIn;\n    }\n    const logout = () => {\n        localStorage.removeItem(\"jwtToken\");\n    }\n\n    const login = (user, password) => {\n        const options = makeOptions(\"POST\", true, { username: user, password: password });\n        return fetch(baseURL + \"/api/login\", options)\n            .then(handleHttpErrors)\n            .then(res => { setToken(res.token) })\n    }\n\n    const fetchData = () => {\n        const options = makeOptions(\"GET\", true); //True add's the token\n        return fetch(baseURL + \"/api/info/user\", options).then(handleHttpErrors);\n    }\n    const makeOptions = (method, addToken, body) => {\n        var opts = {\n            method: method,\n            headers: {\n                \"Content-type\": \"application/json\",\n                'Accept': 'application/json',\n                'Origin': '*'\n            }\n        }\n        if (addToken && loggedIn()) {\n            opts.headers[\"x-access-token\"] = getToken();\n        }\n        if (body) {\n            opts.body = JSON.stringify(body);\n        }\n        return opts;\n    }\n    return {\n        makeOptions,\n        setToken,\n        getToken,\n        loggedIn,\n        login,\n        logout,\n        fetchData\n    }\n}\nconst facade = apiFacade();\nexport default facade;\n"]},"metadata":{},"sourceType":"module"}